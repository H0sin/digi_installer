global
    log stdout format raw local0
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
    daemon

defaults
    mode http
    log global
    option httplog
    option forwardfor
    timeout connect 5s
    timeout client 30s
    timeout server 30s

resolvers docker_resolver
    nameserver dns 127.0.0.11:53
    resolve_retries       3
    timeout retry         1s
    hold valid            10s

frontend http_frontend
    bind *:80
    http-request redirect scheme https code 301 if !{ ssl_fc }

frontend https_frontend
    bind *:443 ssl crt /etc/ssl/private/ alpn h2,http/1.1
    http-request set-header X-Forwarded-Proto https
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

    acl host_client_app hdr(host) -i ${CLIENT_APP_DOMAIN}
    acl host_webapp     hdr(host) -i ${DOMAIN}
    acl host_rabbitmq   hdr(host) -i ${RABBITMQ_DOMAIN}
    acl host_pgadmin    hdr(host) -i ${PGADMIN_DOMAIN}
    acl host_portainer  hdr(host) -i ${PORTAINER_DOMAIN}
    acl host_redisinsight hdr(host) -i ${REDISINSIGHT_DOMAIN}

    use_backend client_app_backend if host_client_app
    use_backend webapp_backend     if host_webapp
    use_backend rabbitmq_backend   if host_rabbitmq
    use_backend pgadmin_backend    if host_pgadmin
    use_backend portainer_backend  if host_portainer
    use_backend redisinsight_backend if host_redisinsight
    
    default_backend client_app_backend

backend client_app_backend
    balance roundrobin
    server clientapp1 client-app:3000 check resolvers docker_resolver resolve-prefer ipv4

backend webapp_backend
    balance roundrobin
    option httpchk GET /health HTTP/1.1\r\nHost:\ localhost
    server webapp1 webapp:8080 check resolvers docker_resolver resolve-prefer ipv4

backend rabbitmq_backend
    balance roundrobin
    server rabbitmq1 rabbitmq:15672 check resolvers docker_resolver resolve-prefer ipv4

backend pgadmin_backend
    balance roundrobin
    server pgadmin1 pgadmin:80 check resolvers docker_resolver resolve-prefer ipv4

backend portainer_backend
    balance roundrobin
    server portainer1 portainer:9000 check resolvers docker_resolver resolve-prefer ipv4
    
backend redisinsight_backend
    balance roundrobin
    server redisinsight1 redisinsight:5540 check resolvers docker_resolver resolve-prefer ipv4

listen stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats realm "HAProxy Statistics"
    stats auth admin:${HAPROXY_STATS_PASS}
    stats refresh 10s